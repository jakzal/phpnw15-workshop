services:
    # First we define some basic services to make these utilities available in
    # the entire application
    slugger:
        class: AppBundle\Utils\Slugger

    markdown:
        class: AppBundle\Utils\Markdown

    # These are the Twig extensions that create new filters and functions for
    # using them in the templates
    app.twig.app_extension:
        public:    false
        class:     AppBundle\Twig\AppExtension
        arguments: ["@markdown"]
        tags:
            - { name: twig.extension }

    app.twig.locale_extension:
        public:    false
        class:     AppBundle\Twig\LocaleExtension
        arguments: ["%app_locales%"]
        tags:
            - { name: twig.extension }

    app.twig.source_code_extension:
        public:    false
        class:     AppBundle\Twig\SourceCodeExtension
        arguments: ["@twig.loader", "%kernel.root_dir%"]
        tags:
            - { name: twig.extension }

    app.twig.extension_intl:
        public: false
        class:  Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    app.controller_listener:
        class:     AppBundle\EventListener\ControllerListener
        arguments: ["@app.twig.source_code_extension"]
        tags:
            - { name: 'kernel.event_listener', event: kernel.controller, method: registerCurrentController }

    # Uncomment the following lines to define a service for the Post Doctrine repository.
    # It's not mandatory to create these services, but if you use repositories a lot,
    # these services simplify your code:
    #
    # post_repository:
    #     class:     Doctrine\ORM\EntityRepository
    #     factory:   ["@doctrine.orm.entity_manager", getRepository]
    #     arguments: [AppBundle\Entity\Post]
    #
    # // traditional code inside a controller
    # $em = $this->getDoctrine()->getManager();
    # $posts = $em->getRepository('AppBundle:Post')->findAll();
    #
    # // same code using repository services
    # $posts = $this->get('post_repository')->findAll();
